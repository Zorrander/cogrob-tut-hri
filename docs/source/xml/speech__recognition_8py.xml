<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="speech__recognition_8py" kind="file" language="Python">
    <compoundname>speech_recognition.py</compoundname>
    <innerclass refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation" prot="public">franka_tut_nlp::speech_recognition::Conversation</innerclass>
    <innernamespace refid="namespacefranka__tut__nlp_1_1speech__recognition">franka_tut_nlp::speech_recognition</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacefranka__tut__nlp_1_1speech__recognition" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Conversation<sp/>module.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>actionlib</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>nltk</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nltk.corpus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>stopwords</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>std_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>String,<sp/>Empty</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefranka__tut__msgs_1_1msg" kindref="compound">franka_tut_msgs.msg</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacefranka__tut__nlp_1_1state__machine" kindref="compound">franka_tut_nlp.state_machine</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>StateMachine</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation" kindref="compound">Conversation</ref>(object):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_relate_skill<sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&quot;grounding_skill_link&quot;</highlight><highlight class="normal">,<sp/>Instructions,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>processed_input_publisher<sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&apos;processed_inputs&apos;</highlight><highlight class="normal">,<sp/>Instruction,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher_ss<sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&apos;speech_synthesizer&apos;</highlight><highlight class="normal">,<sp/>String,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_grounding_triple<sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&quot;grounding_triple&quot;</highlight><highlight class="normal">,<sp/>Instruction,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_end_grounding<sp/>=<sp/>rospy.Publisher(</highlight><highlight class="stringliteral">&quot;end_grounding&quot;</highlight><highlight class="normal">,<sp/>Empty,<sp/>queue_size=10)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a76bb16361587a090d08bab0fcbb9d5fb" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Initialize<sp/>state<sp/>machine&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1ab9755a8f17ff82ec67ae0c1a233291d5" kindref="member">m</ref><sp/>=<sp/><ref refid="classfranka__tut__nlp_1_1state__machine_1_1StateMachine" kindref="compound">StateMachine</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.add_state(</highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a54f0e9f98f9a87544196b83cbd064b90" kindref="member">listening_transitions</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.add_state(</highlight><highlight class="stringliteral">&quot;grounding_action&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a8c0415fa0509770b6011f2114c9f35ba" kindref="member">grounding_action_transitions</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.add_state(</highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1af1158a2ed3bd6f735915f2acb0729240" kindref="member">grounding_target_transitions</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.add_state(</highlight><highlight class="stringliteral">&quot;performing&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a59cd610990fcc55e1030661303cb3be0" kindref="member">busy_transitions</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.add_state(</highlight><highlight class="stringliteral">&quot;error_state&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>end_state=1)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.set_state(</highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sr_processing(self,<sp/>message):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a8cbdfd8a43acb063d83e8bb6284b3787" kindref="member">preprocess_txt</ref>(message.data)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.run(tokens)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">grounding_active(self):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>active<sp/>!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">grounding_feedback(self,<sp/>feedback):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>feedback&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">grounding_done(self,<sp/>state,<sp/>result):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>completed<sp/>with<sp/>success<sp/>!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">symbol_unknown(self,<sp/>msg):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.m.set_state(</highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">preprocess_txt(self,<sp/>txt):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_words<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;oh&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ah&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;okay&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ok&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;well&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;please&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;first&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;then&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;finally&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;listening&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;understood&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;got&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;it&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;explain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;cocaine&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;another&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;way&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;room&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>banned_words<sp/>=<sp/>stopwords.words(</highlight><highlight class="stringliteral">&apos;english&apos;</highlight><highlight class="normal">)<sp/>+<sp/>list_words</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bag_words<sp/>=<sp/>[word<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nltk.word_tokenize(txt.lower())<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>word.isalpha()]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>[t.title()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bag_words<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>banned_words]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tokens</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a54f0e9f98f9a87544196b83cbd064b90" kindref="member">listening_transitions</ref>(self,<sp/>tokens):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>tokens<sp/>in<sp/>the<sp/>listening<sp/>mode</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Teach&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a8f31a3b22807dc53b5a9a6702cc39de0" kindref="member">listening_to_teaching</ref>(tokens)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>==<sp/>2):<sp/><sp/></highlight><highlight class="comment">#<sp/>received<sp/>valid<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;performing&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.processed_input_publisher.publish(Instruction(tokens[0],<sp/>tokens[1]))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>received<sp/>illicit<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols<sp/>=<sp/>tokens</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>state<sp/>--&gt;<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>new_state.upper())</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_state</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a8f31a3b22807dc53b5a9a6702cc39de0" kindref="member">listening_to_teaching</ref>(self,<sp/>tokens):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activate<sp/>either<sp/>the<sp/>action<sp/>grounding<sp/>or<sp/>target<sp/>grounding<sp/>mode</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>tokens</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>AddInfoConversationGoal(symbol=tokens[1],<sp/>category=</highlight><highlight class="stringliteral">&quot;targets&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>actionlib.SimpleActionClient(</highlight><highlight class="stringliteral">&apos;grounding_action&apos;</highlight><highlight class="normal">,<sp/>AddInfoConversationAction)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.wait_for_server()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.send_goal(goal,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a0fc995ca8d54d07df64cf2b3e163f4cf" kindref="member">grounding_done</ref>,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a66afb123cbe81823d8257e40b34537f4" kindref="member">grounding_active</ref>,<sp/>self.grounding_feedbackb)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Action&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_action&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>AddInfoConversationGoal(symbol=tokens[2],<sp/>category=</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/>actionlib.SimpleActionClient(</highlight><highlight class="stringliteral">&apos;grounding_action&apos;</highlight><highlight class="normal">,<sp/>AddInfoConversationAction)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.wait_for_server()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.send_goal(goal,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a0fc995ca8d54d07df64cf2b3e163f4cf" kindref="member">grounding_done</ref>,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a66afb123cbe81823d8257e40b34537f4" kindref="member">grounding_active</ref>,<sp/>self.<ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a220db20ca27c8730bfcee3d4d3cceaf1" kindref="member">grounding_feedback</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_state</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a8c0415fa0509770b6011f2114c9f35ba" kindref="member">grounding_action_transitions</ref>(self,<sp/>tokens):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>tokens<sp/>in<sp/>the<sp/>listening<sp/>mode</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>tokens</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Done&quot;</highlight><highlight class="normal">):<sp/></highlight><highlight class="comment">#<sp/>End<sp/>of<sp/>grounding<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_end_grounding.publish()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>==<sp/>2):<sp/><sp/></highlight><highlight class="comment">#<sp/>building<sp/>skill<sp/>with<sp/>a<sp/>sequence<sp/>of<sp/>known<sp/>utterances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_action&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>create_instruction_msg(Instruction(tokens[0],<sp/>tokens[1]))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_grounding_triple.publish(msg)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>==<sp/>5):<sp/><sp/></highlight><highlight class="comment">#<sp/>relating<sp/>to<sp/>an<sp/>existing<sp/>skill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instructions<sp/>=<sp/>[Instruction(tokens[0],<sp/>tokens[1]),<sp/>Instruction(tokens[3],<sp/>tokens[4])]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_relate_skill.publish(Instructions(instructions))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>state<sp/>--&gt;<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>new_state.upper())</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_state</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1af1158a2ed3bd6f735915f2acb0729240" kindref="member">grounding_target_transitions</ref>(self,<sp/>tokens):</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>tokens<sp/>in<sp/>the<sp/>listening<sp/>mode</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Done&quot;</highlight><highlight class="normal">):<sp/></highlight><highlight class="comment">#<sp/>End<sp/>of<sp/>grounding<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_end_grounding.publish()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>==<sp/>1):<sp/></highlight><highlight class="comment">#<sp/>Defining<sp/>a<sp/>sub<sp/>classs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_grounding_triple.publish(Instruction(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>tokens[0]))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(len(tokens)<sp/>&lt;=<sp/>3):<sp/></highlight><highlight class="comment">#<sp/>Defining<sp/>an<sp/>equivalent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Like&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_grounding_triple.publish(Instruction(tokens[0],<sp/>tokens[1]))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Like&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_grounding_triple.publish(Instruction(tokens[1],<sp/>tokens[2]))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;grounding_target&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Conversation.pub_grounding_triple.publish(Instruction(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>tokens[1]))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>state<sp/>--&gt;<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>new_state.upper())</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_state</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classfranka__tut__nlp_1_1speech__recognition_1_1Conversation_1a59cd610990fcc55e1030661303cb3be0" kindref="member">busy_transitions</ref>(self,<sp/>tokens):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>process<sp/>tokens<sp/>in<sp/>the<sp/>performing<sp/>mode</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Stop&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;listening&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Going<sp/>to<sp/>state<sp/>--&gt;<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>new_state.upper())</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;performing&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>take<sp/>other<sp/>input<sp/>while<sp/>performing<sp/>an<sp/>action&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_state</highlight></codeline>
    </programlisting>
    <location file="franka_tut_nlp/src/franka_tut_nlp/speech_recognition.py"/>
  </compounddef>
</doxygen>
